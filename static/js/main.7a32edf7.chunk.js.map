{"version":3,"sources":["index.js"],"names":["Square","props","id","value","className","class","onClick","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","start","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","reset","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a32edf7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\n    return (\r\n        <button id={props.value} className={`square ${props.class}`} onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n  \r\nclass Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n            class={this.props.class}\r\n            value={this.props.squares[i]} \r\n            onClick={() => this.props.onClick(i)}\r\n            />\r\n        )\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div className='game-board-inner'>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\nclass Game extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            history: [\r\n                {squares: Array(9).fill(null)}\r\n            ],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            start: false\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\r\n        const current = history[history.length - 1]\r\n        const squares = current.squares.slice()\r\n\r\n        if(calculateWinner(squares) || squares[i]){\r\n            return\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n            start: true\r\n        })\r\n    }\r\n\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber : step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    }\r\n\r\n    reset(){\r\n        this.setState({\r\n            history: [\r\n                {squares: Array(9).fill(null)}\r\n            ],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            start: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history\r\n        const current = history[this.state.stepNumber]\r\n        const winner = calculateWinner(current.squares)\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = `Go to move ${move}`\r\n            return(\r\n                <button key={move} onClick={() => this.jumpTo(move)}>{desc}</button>\r\n            )\r\n        })\r\n\r\n        let status\r\n        let id\r\n        if(this.state.stepNumber === 9 && !winner) {\r\n            status = `It's a tie!`\r\n            id = 'both'\r\n        }else if (winner){\r\n            status = `${winner} won!`\r\n            id = `${(this.state.xIsNext ? 'O' : 'X')}`\r\n        }else{\r\n            status = `Current player: ${(this.state.xIsNext ? 'X' : 'O')}`\r\n            id = `${(this.state.xIsNext ? 'X' : 'O')}`\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <h1 id={id}>{status}</h1>\r\n                <div className=\"main\">\r\n                    <div className=\"game-board\">\r\n                        <Board class={id} squares={current.squares} onClick={(i) => this.handleClick(i)} />\r\n                    </div>\r\n                    <div className=\"back-buttons\">\r\n                        <button onClick={() => this.reset()}>Play Again!</button>\r\n                        {this.state.start ? moves : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}